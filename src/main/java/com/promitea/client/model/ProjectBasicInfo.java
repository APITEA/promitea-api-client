/*
 * Promitea REST API v2
 * Promitea REST API v2
 *
 * OpenAPI spec version: 2.0
 * Contact: support@apitea.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.promitea.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A basic info project entity
 */
@ApiModel(description = "A basic info project entity")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-20T13:25:47.817Z")
public class ProjectBasicInfo {
  @SerializedName("additionalNames")
  private List<Text> additionalNames = null;

  @SerializedName("description")
  private Text description = null;

  @SerializedName("externalId")
  private String externalId = null;

  @SerializedName("manager")
  private User manager = null;

  @SerializedName("name")
  private Text name = null;

  public ProjectBasicInfo additionalNames(List<Text> additionalNames) {
    this.additionalNames = additionalNames;
    return this;
  }

  public ProjectBasicInfo addAdditionalNamesItem(Text additionalNamesItem) {
    if (this.additionalNames == null) {
      this.additionalNames = new ArrayList<Text>();
    }
    this.additionalNames.add(additionalNamesItem);
    return this;
  }

   /**
   * additional project names
   * @return additionalNames
  **/
  @ApiModelProperty(value = "additional project names")
  public List<Text> getAdditionalNames() {
    return additionalNames;
  }

  public void setAdditionalNames(List<Text> additionalNames) {
    this.additionalNames = additionalNames;
  }

  public ProjectBasicInfo description(Text description) {
    this.description = description;
    return this;
  }

   /**
   * project description
   * @return description
  **/
  @ApiModelProperty(value = "project description")
  public Text getDescription() {
    return description;
  }

  public void setDescription(Text description) {
    this.description = description;
  }

  public ProjectBasicInfo externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * project external id
   * @return externalId
  **/
  @ApiModelProperty(value = "project external id")
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public ProjectBasicInfo manager(User manager) {
    this.manager = manager;
    return this;
  }

   /**
   * manager
   * @return manager
  **/
  @ApiModelProperty(value = "manager")
  public User getManager() {
    return manager;
  }

  public void setManager(User manager) {
    this.manager = manager;
  }

  public ProjectBasicInfo name(Text name) {
    this.name = name;
    return this;
  }

   /**
   * project name
   * @return name
  **/
  @ApiModelProperty(value = "project name")
  public Text getName() {
    return name;
  }

  public void setName(Text name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectBasicInfo projectBasicInfo = (ProjectBasicInfo) o;
    return Objects.equals(this.additionalNames, projectBasicInfo.additionalNames) &&
        Objects.equals(this.description, projectBasicInfo.description) &&
        Objects.equals(this.externalId, projectBasicInfo.externalId) &&
        Objects.equals(this.manager, projectBasicInfo.manager) &&
        Objects.equals(this.name, projectBasicInfo.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalNames, description, externalId, manager, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectBasicInfo {\n");
    
    sb.append("    additionalNames: ").append(toIndentedString(additionalNames)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

