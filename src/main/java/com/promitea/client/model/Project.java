/*
 * Promitea REST API v2
 * Promitea REST API v2
 *
 * OpenAPI spec version: 2.0
 * Contact: support@apitea.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.promitea.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * A project entity
 */
@ApiModel(description = "A project entity")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-08-05T07:13:22.864Z")
public class Project {
  @SerializedName("additionalNames")
  private List<Text> additionalNames = null;

  @SerializedName("description")
  private Text description = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("manager")
  private User manager = null;

  @SerializedName("name")
  private Text name = null;

  @SerializedName("phases")
  private List<Phase> phases = null;

  @SerializedName("projectType")
  private String projectType = null;

  @SerializedName("templateCode")
  private String templateCode = null;

  public Project additionalNames(List<Text> additionalNames) {
    this.additionalNames = additionalNames;
    return this;
  }

  public Project addAdditionalNamesItem(Text additionalNamesItem) {
    if (this.additionalNames == null) {
      this.additionalNames = new ArrayList<Text>();
    }
    this.additionalNames.add(additionalNamesItem);
    return this;
  }

   /**
   * additional project names
   * @return additionalNames
  **/
  @ApiModelProperty(value = "additional project names")
  public List<Text> getAdditionalNames() {
    return additionalNames;
  }

  public void setAdditionalNames(List<Text> additionalNames) {
    this.additionalNames = additionalNames;
  }

  public Project description(Text description) {
    this.description = description;
    return this;
  }

   /**
   * project description
   * @return description
  **/
  @ApiModelProperty(value = "project description")
  public Text getDescription() {
    return description;
  }

  public void setDescription(Text description) {
    this.description = description;
  }

  public Project id(String id) {
    this.id = id;
    return this;
  }

   /**
   * project id
   * @return id
  **/
  @ApiModelProperty(value = "project id")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Project manager(User manager) {
    this.manager = manager;
    return this;
  }

   /**
   * manager
   * @return manager
  **/
  @ApiModelProperty(value = "manager")
  public User getManager() {
    return manager;
  }

  public void setManager(User manager) {
    this.manager = manager;
  }

  public Project name(Text name) {
    this.name = name;
    return this;
  }

   /**
   * project name
   * @return name
  **/
  @ApiModelProperty(value = "project name")
  public Text getName() {
    return name;
  }

  public void setName(Text name) {
    this.name = name;
  }

  public Project phases(List<Phase> phases) {
    this.phases = phases;
    return this;
  }

  public Project addPhasesItem(Phase phasesItem) {
    if (this.phases == null) {
      this.phases = new ArrayList<Phase>();
    }
    this.phases.add(phasesItem);
    return this;
  }

   /**
   * project phases
   * @return phases
  **/
  @ApiModelProperty(value = "project phases")
  public List<Phase> getPhases() {
    return phases;
  }

  public void setPhases(List<Phase> phases) {
    this.phases = phases;
  }

  public Project projectType(String projectType) {
    this.projectType = projectType;
    return this;
  }

   /**
   * project type
   * @return projectType
  **/
  @ApiModelProperty(value = "project type")
  public String getProjectType() {
    return projectType;
  }

  public void setProjectType(String projectType) {
    this.projectType = projectType;
  }

  public Project templateCode(String templateCode) {
    this.templateCode = templateCode;
    return this;
  }

   /**
   * project template
   * @return templateCode
  **/
  @ApiModelProperty(value = "project template")
  public String getTemplateCode() {
    return templateCode;
  }

  public void setTemplateCode(String templateCode) {
    this.templateCode = templateCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Project project = (Project) o;
    return Objects.equals(this.additionalNames, project.additionalNames) &&
        Objects.equals(this.description, project.description) &&
        Objects.equals(this.id, project.id) &&
        Objects.equals(this.manager, project.manager) &&
        Objects.equals(this.name, project.name) &&
        Objects.equals(this.phases, project.phases) &&
        Objects.equals(this.projectType, project.projectType) &&
        Objects.equals(this.templateCode, project.templateCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalNames, description, id, manager, name, phases, projectType, templateCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Project {\n");
    
    sb.append("    additionalNames: ").append(toIndentedString(additionalNames)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    manager: ").append(toIndentedString(manager)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    phases: ").append(toIndentedString(phases)).append("\n");
    sb.append("    projectType: ").append(toIndentedString(projectType)).append("\n");
    sb.append("    templateCode: ").append(toIndentedString(templateCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

