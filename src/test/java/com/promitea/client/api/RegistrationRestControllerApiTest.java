/*
 * Promitea REST API v2
 * Promitea REST API v2
 *
 * OpenAPI spec version: 2.0
 * Contact: support@apitea.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.promitea.client.api;

import java.util.Date;

import com.promitea.client.ApiException;
import com.promitea.client.HasApiClient;
import com.promitea.client.model.Organization;
import com.promitea.client.model.User;
import com.promitea.client.model.UserToRegister;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.Ignore;

import static com.promitea.client.api.ProjectRestControllerApiTest.localhost;

/**
 * API tests for RegistrationRestControllerApi
 */
public class RegistrationRestControllerApiTest extends AbstractRestControllerApiTest
{
    private final RegistrationRestControllerApi api = new RegistrationRestControllerApi();
    
    /**
     * Register a new organisation into Promitea
     *
     * Returns organisation detail
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registerOrganizationUsingPOSTTest() throws ApiException
    {
        String email = "trash" + startTime + "@apitea.com";

        Organization organization = new Organization();

        String organizationName = "Test Api Organization - " + startTime;

        organization.setName(organizationName);
        organization.setLanguage("en");
        organization.setEmail(email);

        // User
        UserToRegister user = new UserToRegister();
        user.setFirstName("Api");
        user.setLastName("Manager");
        user.setEmail(email);
        user.setPhone("123456789");

        organization.setUser(user);

        Organization orgResponse = api.registerOrganizationUsingPOST(organization);

        Assert.assertNotNull(orgResponse);
        Assert.assertNotNull(orgResponse.getId());
        Assert.assertEquals(organizationName, orgResponse.getName());
        Assert.assertEquals(email, orgResponse.getEmail());
        Assert.assertEquals("en", orgResponse.getLanguage());

        UserToRegister userResponse = orgResponse.getUser();

        Assert.assertNotNull(userResponse);
        Assert.assertNotNull(userResponse.getId());
        Assert.assertEquals("Api", userResponse.getFirstName());
        Assert.assertEquals("Manager", userResponse.getLastName());
        Assert.assertEquals(email, userResponse.getEmail());
        Assert.assertEquals("123456789", userResponse.getPhone());
    }

    @Override
    protected HasApiClient getApiClient()
    {
        return api;
    }

    @Override
    protected String getApiKey()
    {
        return "987654321";
    }
}
